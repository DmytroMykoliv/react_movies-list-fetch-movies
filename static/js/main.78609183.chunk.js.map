{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","Title","Plot","Poster","imdbUrl","className","src","alt","href","MoviesList","props","movies","map","movie","imdbID","loadMovies","title","fetch","then","response","ok","json","Promise","reject","Error","FindMovie","getMovies","useState","setMovie","setTitle","toggler","setToggler","getMovie","a","newMovie","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","data","setMovies","isMovie","setIsMovie","some","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78609183.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie | null;\n\nexport const MovieCard: React.FC<Props> = ({\n  Title, Plot, Poster, imdbUrl,\n}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {Plot}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbID} {...movie} />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=ca99bee2&t=';\n\nexport const loadMovies = (title: string): Promise<Movie> => {\n  return fetch(`${API_URL}${title}`)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Failed to load data'));\n    });\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { loadMovies } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  getMovies: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { getMovies } = props;\n  const [movie, setMovie] = useState({} as Movie);\n  const [title, setTitle] = useState('');\n  const [toggler, setToggler] = useState(true);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value as string);\n    setToggler(true);\n  };\n\n  const getMovie = async () => {\n    const newMovie = await loadMovies(title);\n\n    if (!newMovie.Error) {\n      const imdbUrl = `https://www.imdb.com/title/${newMovie.imdbID}`;\n\n      setMovie({ ...newMovie, imdbUrl });\n    } else {\n      setMovie(newMovie);\n      setToggler(false);\n    }\n  };\n\n  const onAddMovies = () => {\n    getMovies(movie);\n    setMovie({} as Movie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                'is-info', {\n                  'is-danger': !toggler,\n                },\n              )}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n          {movie.Error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovies}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie.imdbID ? (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        ) : movie.Error}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n  const [isMovie, setIsMovie] = useState(false);\n\n  const getMovies = (movie: Movie) => {\n    const checkMovie = movies.some(film => film.imdbID === movie.imdbID);\n\n    if (!checkMovie) {\n      setMovies([movie, ...movies]);\n      setIsMovie(false);\n    } else {\n      setIsMovie(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie getMovies={getMovies} />\n\n        {isMovie && (\n          <h3>You have already added this movie</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}